// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Курасач.Models;

#nullable disable

namespace Курасач.Migrations
{
    [DbContext(typeof(InsuranceAgencyDbContext))]
    partial class InsuranceAgencyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Курасач.Models.Agent", b =>
                {
                    b.Property<int>("AgentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AgentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgentId"));

                    b.Property<string>("ContactNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullAgentsName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Full_Agents_Name");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("Stat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Active");

                    b.HasKey("AgentId")
                        .HasName("PK__Agents__9AC3BFD1A51891F5");

                    b.ToTable("Agents");
                });

            modelBuilder.Entity("Курасач.Models.Branch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<int>("EmployeeCount")
                        .HasColumnType("int")
                        .HasColumnName("employee_count");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__Branches__3213E83FE024473C");

                    b.ToTable("Branches");
                });

            modelBuilder.Entity("Курасач.Models.CommonUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int>("CardsNumber")
                        .HasColumnType("int")
                        .HasColumnName("Cards_Number");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("PassportId")
                        .HasColumnType("int")
                        .HasColumnName("Passport_ID");

                    b.Property<string>("PassportNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("Passport_Number");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("Phone_Number");

                    b.Property<string>("UsersLogin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Users_Login");

                    b.Property<string>("UsersMail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Users_Mail");

                    b.Property<string>("UsersPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("Users_Password");

                    b.HasKey("Id")
                        .HasName("PK__Common_U__3214EC276E91DF7C");

                    b.HasIndex(new[] { "UsersMail" }, "UQ__Common_U__2FB2F31021894295")
                        .IsUnique();

                    b.HasIndex(new[] { "UsersLogin" }, "UQ__Common_U__4DF299E60AFE24D9")
                        .IsUnique();

                    b.HasIndex(new[] { "PassportId" }, "UQ__Common_U__A6C3B540101978FB")
                        .IsUnique();

                    b.HasIndex(new[] { "PassportNumber" }, "UQ__Common_U__EC266AD93892A158")
                        .IsUnique();

                    b.ToTable("Common_User", (string)null);
                });

            modelBuilder.Entity("Курасач.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("MessageContacts")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Message_Contacts");

                    b.Property<string>("NameOfMessager")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Name_of_Messager");

                    b.HasKey("Id")
                        .HasName("PK__Contacts__3214EC27A3580288");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Курасач.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AgentId")
                        .HasColumnType("int")
                        .HasColumnName("agent_id");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<DateOnly>("ContractDate")
                        .HasColumnType("date")
                        .HasColumnName("contract_date");

                    b.Property<string>("Terms")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("terms");

                    b.HasKey("Id")
                        .HasName("PK__Contract__3213E83F1E331B48");

                    b.HasIndex("AgentId");

                    b.HasIndex("ClientId");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("Курасач.Models.HealthInsurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<decimal?>("CoverageLimit")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("coverage_limit");

                    b.Property<string>("MedicalConditions")
                        .HasColumnType("text")
                        .HasColumnName("medical_conditions");

                    b.HasKey("Id")
                        .HasName("PK__HealthIn__3213E83F43DE6109");

                    b.HasIndex("ClientId");

                    b.ToTable("HealthInsurance", (string)null);
                });

            modelBuilder.Entity("Курасач.Models.InsuranceClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("claim_status");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<DateOnly>("IncidentDate")
                        .HasColumnType("date")
                        .HasColumnName("incident_date");

                    b.Property<int>("PolicyId")
                        .HasColumnType("int")
                        .HasColumnName("policy_id");

                    b.HasKey("Id")
                        .HasName("PK__Insuranc__3213E83FB28608C4");

                    b.HasIndex("PolicyId");

                    b.ToTable("InsuranceClaims");
                });

            modelBuilder.Entity("Курасач.Models.LifeInsurance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<DateOnly>("ExpirationDate")
                        .HasColumnType("date")
                        .HasColumnName("expiration_date");

                    b.Property<decimal>("InsuredAmount")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("insured_amount");

                    b.HasKey("Id")
                        .HasName("PK__LifeInsu__3213E83F2C0D22B8");

                    b.HasIndex("ClientId");

                    b.ToTable("LifeInsurance", (string)null);
                });

            modelBuilder.Entity("Курасач.Models.Payment", b =>
                {
                    b.Property<int>("IdPayment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Payment");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPayment"));

                    b.Property<DateTime>("DateOfPay")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Date_of_pay")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdClients")
                        .HasColumnType("int")
                        .HasColumnName("ID_Clients");

                    b.Property<int>("IdPolices")
                        .HasColumnType("int")
                        .HasColumnName("ID_Polices");

                    b.Property<decimal>("Summa")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("TypeOfPay")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Type_of_pay");

                    b.HasKey("IdPayment")
                        .HasName("PK__Payments__C2118ADE0E433BB5");

                    b.HasIndex("IdClients");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Курасач.Models.Policy", b =>
                {
                    b.Property<int>("PolicyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PolicyID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PolicyId"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("ClientID");

                    b.Property<decimal>("CoverageAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("PolicyType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Premium")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Stat")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasDefaultValue("Active");

                    b.HasKey("PolicyId")
                        .HasName("PK__Policies__2E13394422DFE35E");

                    b.HasIndex("ClientId");

                    b.ToTable("Policies");
                });

            modelBuilder.Entity("Курасач.Models.PolicyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("base_price");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__PolicyTy__3213E83FD4FC7218");

                    b.ToTable("PolicyTypes");
                });

            modelBuilder.Entity("Курасач.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("address");

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<decimal>("InsuredValue")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("insured_value");

                    b.Property<string>("PropertyType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("property_type");

                    b.HasKey("Id")
                        .HasName("PK__Property__3213E83F33F856D7");

                    b.HasIndex("ClientId");

                    b.ToTable("Property", (string)null);
                });

            modelBuilder.Entity("Курасач.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<string>("Comments")
                        .HasColumnType("text")
                        .HasColumnName("comments");

                    b.Property<int?>("Rating")
                        .HasColumnType("int")
                        .HasColumnName("rating");

                    b.Property<DateTime?>("ReviewDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("review_date")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__Reviews__3213E83F7801039F");

                    b.HasIndex("ClientId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Курасач.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int")
                        .HasColumnName("client_id");

                    b.Property<decimal>("InsuredValue")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("insured_value");

                    b.Property<string>("Mark")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("mark");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("model");

                    b.Property<string>("RegistrationNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("registration_number");

                    b.Property<int>("YearOfMade")
                        .HasColumnType("int")
                        .HasColumnName("year_of_made");

                    b.HasKey("Id")
                        .HasName("PK__Vehicles__3213E83F33F7BEBE");

                    b.HasIndex("ClientId");

                    b.HasIndex(new[] { "RegistrationNumber" }, "UQ__Vehicles__125DB2A3F4B512EA")
                        .IsUnique();

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Курасач.Models.VersionUpdate", b =>
                {
                    b.Property<int>("NumberOfUpdate")
                        .HasColumnType("int")
                        .HasColumnName("Number_of_Update");

                    b.Property<string>("ContentUpdate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("Content_Update");

                    b.Property<DateOnly>("DateOfUpdate")
                        .HasColumnType("date")
                        .HasColumnName("Date_of_update");

                    b.HasKey("NumberOfUpdate")
                        .HasName("PK__Version___5546AFC7697D25DD");

                    b.ToTable("Version_Update", (string)null);
                });

            modelBuilder.Entity("Курасач.Models.Contract", b =>
                {
                    b.HasOne("Курасач.Models.Agent", "Agent")
                        .WithMany("Contracts")
                        .HasForeignKey("AgentId")
                        .IsRequired()
                        .HasConstraintName("FK__Contracts__agent__6A30C649");

                    b.HasOne("Курасач.Models.CommonUser", "Client")
                        .WithMany("Contracts")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Contracts__clien__6B24EA82");

                    b.Navigation("Agent");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Курасач.Models.HealthInsurance", b =>
                {
                    b.HasOne("Курасач.Models.CommonUser", "Client")
                        .WithMany("HealthInsurances")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__HealthIns__clien__59063A47");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Курасач.Models.InsuranceClaim", b =>
                {
                    b.HasOne("Курасач.Models.Policy", "Policy")
                        .WithMany("InsuranceClaims")
                        .HasForeignKey("PolicyId")
                        .IsRequired()
                        .HasConstraintName("FK__Insurance__polic__6E01572D");

                    b.Navigation("Policy");
                });

            modelBuilder.Entity("Курасач.Models.LifeInsurance", b =>
                {
                    b.HasOne("Курасач.Models.CommonUser", "Client")
                        .WithMany("LifeInsurances")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__LifeInsur__clien__70DDC3D8");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Курасач.Models.Payment", b =>
                {
                    b.HasOne("Курасач.Models.CommonUser", "IdClientsNavigation")
                        .WithMany("Payments")
                        .HasForeignKey("IdClients")
                        .IsRequired()
                        .HasConstraintName("FK_Clients_Payment");

                    b.Navigation("IdClientsNavigation");
                });

            modelBuilder.Entity("Курасач.Models.Policy", b =>
                {
                    b.HasOne("Курасач.Models.CommonUser", "Client")
                        .WithMany("Policies")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK_Policies_Clients");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Курасач.Models.Property", b =>
                {
                    b.HasOne("Курасач.Models.CommonUser", "Client")
                        .WithMany("Properties")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Property__client__60A75C0F");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Курасач.Models.Review", b =>
                {
                    b.HasOne("Курасач.Models.CommonUser", "Client")
                        .WithMany("Reviews")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Reviews__client___5DCAEF64");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Курасач.Models.Vehicle", b =>
                {
                    b.HasOne("Курасач.Models.CommonUser", "Client")
                        .WithMany("Vehicles")
                        .HasForeignKey("ClientId")
                        .IsRequired()
                        .HasConstraintName("FK__Vehicles__client__6477ECF3");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Курасач.Models.Agent", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("Курасач.Models.CommonUser", b =>
                {
                    b.Navigation("Contracts");

                    b.Navigation("HealthInsurances");

                    b.Navigation("LifeInsurances");

                    b.Navigation("Payments");

                    b.Navigation("Policies");

                    b.Navigation("Properties");

                    b.Navigation("Reviews");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Курасач.Models.Policy", b =>
                {
                    b.Navigation("InsuranceClaims");
                });
#pragma warning restore 612, 618
        }
    }
}
